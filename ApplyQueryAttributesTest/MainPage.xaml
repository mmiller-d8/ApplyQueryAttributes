<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="ApplyQueryAttributesTest.MainPage"
             xmlns:local="clr-namespace:ApplyQueryAttributesTest"
             xmlns:gestures="clr-namespace:D8.Maui.Components.Gestures"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:root="clr-namespace:ApplyQueryAttributesTest"
             x:Name="this">

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="Small" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto,*,Auto" BindingContext="{x:Reference this}" Padding="10">

        <VerticalStackLayout Grid.Row="0" Spacing="10">
            <Label Text="Drag the red boxes without the checkbox checked and observe that dragging works.  Check the box and observe that it is now broken." />
            <Label Text="Once the drag breaks, if you release the drag and then start it again, it will drag normally." />
            <Label Text="If you remove one of the borders from the UI, it works normally.  It seems like the event routing is getting confused." />
            <Label Text="There is also a TapGestureRecognizer that will update the Z-Index.  If you tap the border before you drag it, it works" />
            <Label Text="There is a lot of code involved here, but there are Debug.WriteLine statements in PanGestureRecognizerBase that show that the raw Pan events are being interrupted." />
            <Label Text="This behavior only occurs on Android.  On iOS, it works as expected." />
        </VerticalStackLayout>

        <Grid
            Grid.Row="1"
            x:Name="mainContainer"
            IsClippedToBounds="True"
            ColumnDefinitions="*,*"
            x:DataType="local:MainPage">

            <Border Grid.Column="0" BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center">
                <Border.GestureRecognizers>
                    <gestures:DragGestureRecognizer  BoundingView="{x:Reference mainContainer}" PanStarted="DragGestureRecognizer_PanStarted" PanCompleted="DragGestureRecognizer_PanCompleted" />
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Border.GestureRecognizers>
            </Border>

            <Border  Grid.Column="1" BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center">
                <Border.GestureRecognizers>
                    <gestures:DragGestureRecognizer  BoundingView="{x:Reference mainContainer}" PanStarted="DragGestureRecognizer_PanStarted" PanCompleted="DragGestureRecognizer_PanCompleted" />
                    <TapGestureRecognizer Tapped="TapGestureRecognizer_Tapped" />
                </Border.GestureRecognizers>
            </Border>

            <!-- <VerticalStackLayout Spacing="100" IsClippedToBounds="True" x:Name="dragPanel" Margin="20,0,20,20">
                <VerticalStackLayout.GestureRecognizers>
                    <gestures:ScrollGestureRecognizer  BoundingView="{x:Reference this}" AnimationTarget="{x:Reference dragPanel}" />
                </VerticalStackLayout.GestureRecognizers>

                <Border BackgroundColor="White" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="White" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="White" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="White" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="Red" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
                <Border BackgroundColor="White" WidthRequest="100" HeightRequest="100" VerticalOptions="Center" HorizontalOptions="Center" />
            </VerticalStackLayout> -->
        </Grid>            

        <Grid Grid.Row="2" RowSpacing="10" Padding="10" RowDefinitions="*" ColumnDefinitions="Auto, *">
            <CheckBox IsChecked="{Binding IsZIndexSetEnabled}" Grid.Column="0" Grid.Row="0" VerticalOptions="Center" Color="Black" />
            <Label Text="Enable ZIndex Update" Grid.Column="1" Grid.Row="0" VerticalOptions="Center" VerticalTextAlignment="Center" />
        </Grid>

    </Grid>

</ContentPage>

